<?xml version="1.0"?>
<!-- NOTE: To bind certificate to a port, run this command: -->
<!--       netsh http add sslcert ipport=0.0.0.0:8085 certhash=bad3d8e422f8cf7640353c9bdd13e3e7f7eeaca7 appid={00112233-4455-6677-8899-AABBCCDDEEFF}  -->
<configuration>
	<configSections>
		<section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
	</configSections>
	<appSettings>
		<!-- The https URI at which this service will be hosted. -->
		<!-- NOTE: Should be in the format https://HOSTNAME:PORT/SERVICENAME -->
		<add key="iceIMRServiceHost.httpsUri" value="https://localhost:8301/iceIMRService"/>

		<!-- The certificate serial number of the certifiacte used by the service to identify this server for server authentication on https connections -->
		<!-- NOTE: This is mandatory and must be bound to the port using the netsh command -->
		<add key="iceIMRServiceHost.httpsCertSerial" value=""/>

		<!-- HTTPS send timeout in seconds-->
		<add key="iceIMRServiceHost.httpsSendTimeout" value="60"/>

		<!--  HTTPS inactivity timeout in seconds -->
		<add key="iceIMRServiceHost.httpsInactivityTimeout" value="300"/>

		<!--  HTTPS receive timeout in seconds -->
		<add key="iceIMRServiceHost.httpsReceiveTimeout" value="120"/>

		<!--  PollingDuplexBindingElement MaxPendingSessions -->
		<add key="iceIMRServiceHost.MaxPendingSessions" value="100000"/>

		<!-- PollingDuplexBindingElement MaxPendingMessagesPerSession -->
		<add key="iceIMRServiceHost.MaxPendingMessagesPerSession" value="100000"/>

		<!-- RestartServiceOnError restart service on error -->
		<add key="iceIMRServiceHost.RestartServiceOnError" value="True"/>

		<!-- The net.tcp URI at which this service will be hosted. -->
		<!-- NOTE: Should be in the format net.tcp://HOSTNAME:PORT/SERVICENAME -->
		<add key="iceIMRServiceHost.nettcpUri" value="net.tcp://localhost:8401/iceIMRService"/>

		<!-- The certificate serial number of the certifiacte used by the service to identify this server for server authentication on net.tcp connections -->
		<!-- NOTE: This is mandatory for net.tcp connections -->
		<add key="iceIMRServiceHost.nettcpCertSerial" value=""/>

		<!-- Net TCP send timeout in seconds -->
		<add key="iceIMRServiceHost.nettcpSendTimeout" value="120"/>

		<!-- Net TCP inactivity timeout in seconds -->
		<!-- Note: A minimum value of 60 seconds is enforced -->
		<add key="iceIMRServiceHost.nettcpInactivityTimeout" value="600"/>

		<!-- Net TCP receive timeout in seconds -->
		<!-- NOTE: 0 for TimeSpan.MaxValue (should be default) -->
		<add key="iceIMRServiceHost.nettcpReceiveTimeout" value="0"/>

		<!-- The SwitchId of the switch that the iceIMRService is responsible for. -->
		<add key="iceIMRService.SwitchId" value="11001"/>
		<add key="iceIMRService.icePort" value="2060"/>
		<add key="iceIMRService.iceIsTLS" value="False"/>
		<add key="iceIMRService.iceAgentId" value="9998"/>
		<add key="iceIMRService.icePassword" value="PASSWORD"/>
		<add key="iceIMRService.iceReconnectDelay" value="15000"/>
		<add key="iceIMRService.iceAddress" value="ice.domain.com"/>

		<!--- Email alert settings -->
		<add key="iceIMRService.EmailAlertSMTPServer" value="email.domain.com"/>
		<add key="iceIMRService.EmailAlertSMTPPort" value="25"/>
		<add key="iceIMRService.EmailAlertSMTPEnableSSL" value="False"/>
		<add key="iceIMRService.EmailAlertSMTPUsername" value=""/>
		<add key="iceIMRService.EmailAlertSMTPPassword" value=""/>
		<add key="iceIMRService.EmailAlertFromAddress" value="ice@domain.com"/>
		<add key="iceIMRService.EmailAlertSubjectLine" value="Alert from ice"/>

		<!-- Log level settings -->
		<add key="iceIMRService.TraceLevel" value="1"/>
		<add key="iceIMRService.LogLevel" value="2"/>

		<!--- WCF Settings -->
		<add key="iceIMRService.MaxActiveSend" value="500"/>
		<add key="iceIMRService.DownloadExpiryTimeMinutes" value="1440"/>
		<add key="iceIMRService.StatsUpdateInterval" value="5000"/>

		<!--- Connection Settings -->
		<add key="iceIMRService.iceDBConnectionString" value="Data Source=localhost;Initial Catalog=iceSwitch11001;Persist Security Info=True;User Id=sa;Password=PASSWORD"/>
		<add key="iceIMRService.iceMailDBConnectionString" value="Data Source=localhost;Initial Catalog=iceMail;Persist Security Info=True;User Id=sa;Password=PASSWORD"/>

		<!--- NEW 8.0.3 -->
		<add key="iceIMRServiceHost.HttpServerPollTimeout" value="15" />
		<add key="iceIMRServiceHost.HttpMaxOutputDelay" value="200" />
		<add key="iceIMRServiceHost.HttpsAutoInputSessionShutdown" value="True" />
		<add key="iceIMRServiceHost.NetTcpAutoInputSessionShutdown" value="True" />
		<add key="iceIMRServiceHost.DoHealthCheck" value="False" />
		<add key="iceIMRServiceHost.HealthCheckTime" value="120" />
		<add key="iceIMRServiceHost.HealthCheckTimeout" value="100" />
		<add key="iceIMRServiceHost.RestartDelayTime" value="10" />
		<add key="iceIMRServiceHost.HttpServicePoolAddress" value="" />
		<add key="iceIMRServiceHost.TcpServicePoolAddress" value="" />

		<!--- NEW 8.0.4 -->
		<!-- The path where files will be stored temporarily while they are being converted from legacy formats to new. -->
		<!-- Note: If left blank then it will use the system's configured temp path -->
		<add key="iceIMRService.TempPathForLegacyConversion" value="" />
	
		<!--- NEW 8.0.9 -->
		<add key="iceIMRService.recorderOnly" value="false" />
		<add key="iceIMRService.maxQueuedIceMessage" value="0" />

		<!-- NEW 8.1 -->
		<!-- If we should delete files using sdelete. -->
		<add key="iceIMRService.secureDelete" value="false"/>

		<!-- NEW 8.2 -->
		<add key="iceIMRServiceHost.EnableIdentityServer" value="True" />
		<add key="iceIMRServiceHost.HttpWebApiAddress" value="https://localhost:8501/webapi" />
		<add key="iceIMRServiceHost.HttpIdentityAddress" value="https://localhost:8501/identity" />
		<add key="iceIMRServiceHost.HttpSignalRAddress" value="https://localhost:8501/signalr" />
		<add key="iceIMRServiceHost.SecretKey" value="secretKey" />
	</appSettings>
	<entityFramework>
		<defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
			<parameters>
				<parameter value="v11.0"/>
			</parameters>
		</defaultConnectionFactory>
		<providers>
			<provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer"/>
		</providers>
	</entityFramework>
	<startup useLegacyV2RuntimeActivationPolicy="true">
		<supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7"/>
	</startup>
	<system.net>
		<connectionManagement>
			<add maxconnection = "2000" address ="*" />
		</connectionManagement>
	</system.net>
	<runtime>
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Http" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Net.Http.Formatting" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Owin" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.IdentityModel.Tokens.Jwt" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-4.0.20622.1351" newVersion="4.0.20622.1351" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.IdentityModel.Protocol.Extensions" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-1.0.2.33" newVersion="1.0.2.33" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Cors" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Owin.Security" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0" />
			</dependentAssembly>
		</assemblyBinding>
	</runtime>
</configuration>